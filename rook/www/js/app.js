// Generated by CoffeeScript 1.4.0
(function() {
  var AppController, StatMine, Table,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.StatMine = StatMine = (function(_super) {

    __extends(StatMine, _super);

    function StatMine() {
      return StatMine.__super__.constructor.apply(this, arguments);
    }

    StatMine.root("app#index");

    return StatMine;

  })(Batman.App);

  Table = StatMine.Table = (function(_super) {

    __extends(Table, _super);

    function Table() {
      return Table.__super__.constructor.apply(this, arguments);
    }

    Table.encode("name");

    Table.resourceName = "table";

    Table.persist(Batman.RestStorage);

    Table.url = "/custom/statmine/tables";

    Table.prototype.url = function() {
      return "./tables?name=" + (this.get('name'));
    };

    Table.accessor("Url", function() {
      return this.url();
    });

    return Table;

  })(Batman.Model);

  AppController = StatMine.AppController = (function(_super) {

    __extends(AppController, _super);

    function AppController() {
      return AppController.__super__.constructor.apply(this, arguments);
    }

    AppController.prototype.routingKey = 'app';

    AppController.prototype.check = function(n, e) {
      var nsel;
      nsel = $("input:checked").length;
      console.log(nsel);
      return StatMine.set("nselected", nsel === 2);
    };

    AppController.prototype.index = function() {
      Table.load(function(error, tables) {
        if (error) {
          throw error;
        }
        return StatMine.set("tables", tables);
      });
      return this.render(false);
    };

    return AppController;

  })(Batman.Controller);

  $(function() {
    return StatMine.run();
  });

}).call(this);
